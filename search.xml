<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>使用vue和webpack工程化开发apicloud平台应用</title>
    <url>/2020/03/10/%E4%BD%BF%E7%94%A8vue%E5%92%8Cwebpack%E5%B7%A5%E7%A8%8B%E5%8C%96%E5%BC%80%E5%8F%91apicloud%E5%B9%B3%E5%8F%B0%E5%BA%94%E7%94%A8/</url>
    <content><![CDATA[<p><a href="https://www.apicloud.com/" target="_blank" rel="noopener">apicloud</a>是一个混合app开发平台，有丰富的原生模块，可以云编译打包android和iOS应用，给web前端同学提供了快速高效的开发能力。随着前端开发体验的提升，基于webpack的工程化开发成为了日常开发形式，同样的，我们可以将两者结合起来，打造一个顺手的项目框架。</p>
<p>我们的最终目标：</p>
<ul>
<li>使用前端流行框架，这里我们选用vue进行演示</li>
<li>使用我们熟悉的chrome浏览器调试开发</li>
<li>一套代码，完美运行于android和iOS端</li>
</ul>
<p>你可以访问下面链接，来获取搭建好的源码：</p>
<p><a href="https://github.com/QingyunYang/apicloud-webpack-vue-starter" target="_blank" rel="noopener">github</a></p>
<h2 id="使用vue-cli创建项目"><a href="#使用vue-cli创建项目" class="headerlink" title="使用vue-cli创建项目"></a>使用vue-cli创建项目</h2><h3 id="安装vue脚手架"><a href="#安装vue脚手架" class="headerlink" title="安装vue脚手架"></a>安装vue脚手架</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install -g @vue/cli</span><br><span class="line"><span class="comment"># OR</span></span><br><span class="line">yarn global add @vue/cli</span><br></pre></td></tr></table></figure>

<h3 id="创建项目"><a href="#创建项目" class="headerlink" title="创建项目"></a>创建项目</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">vue create my-project</span><br><span class="line"># OR</span><br><span class="line">vue ui</span><br></pre></td></tr></table></figure>
<h3 id="项目目录如下"><a href="#项目目录如下" class="headerlink" title="项目目录如下"></a>项目目录如下</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">|-- .gitignore</span><br><span class="line">|-- babel.config.js</span><br><span class="line">|-- package.json</span><br><span class="line">|-- README.md</span><br><span class="line">|-- yarn.lock</span><br><span class="line">|-- public</span><br><span class="line">|   |-- favicon.ico</span><br><span class="line">|   |-- index.html</span><br><span class="line">|-- src</span><br><span class="line">    |-- App.vue</span><br><span class="line">    |-- main.js</span><br><span class="line">    |-- assets</span><br><span class="line">    |   |-- logo.png</span><br><span class="line">    |-- components</span><br><span class="line">        |-- HelloWorld.vue</span><br></pre></td></tr></table></figure>

<h2 id="改造为多页面应用"><a href="#改造为多页面应用" class="headerlink" title="改造为多页面应用"></a>改造为多页面应用</h2><p>在这里，我们需要对比一下，使用多页面的优缺点：</p>
<p>优点：使用apicloud提供的方法跳转页面，比单页面的路由跳转页面，看起来更像原生，用户体验更好。</p>
<p>缺点：页面之间无法使用vuex状态库。</p>
<h4 id="项目根目录创建vue-config-js"><a href="#项目根目录创建vue-config-js" class="headerlink" title="项目根目录创建vue.config.js"></a>项目根目录创建vue.config.js</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">'path'</span>)</span><br><span class="line"><span class="keyword">const</span> glob = <span class="built_in">require</span>(<span class="string">'glob'</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> pages = &#123;&#125;</span><br><span class="line">glob.sync(<span class="string">'./src/pages/**/app.js'</span>).forEach(<span class="function"><span class="params">path</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> chunk = path.split(<span class="string">'./src/pages/'</span>)[<span class="number">1</span>].split(<span class="string">'/app.js'</span>)[<span class="number">0</span>]</span><br><span class="line">  pages[chunk] = &#123;</span><br><span class="line">    entry: path,</span><br><span class="line">    chunks: [<span class="string">'chunk-vendors'</span>, <span class="string">'chunk-common'</span>, chunk]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  pages,</span><br><span class="line">  assetsDir: <span class="string">'static'</span>,</span><br><span class="line">  publicPath: process.env.NODE_ENV === <span class="string">'production'</span> ? <span class="string">'./'</span> : <span class="string">'/'</span>,</span><br><span class="line">  configureWebpack: &#123;</span><br><span class="line">    resolve: &#123;</span><br><span class="line">      alias: &#123;</span><br><span class="line">        <span class="string">'@'</span>: path.join(__dirname, <span class="string">'src'</span>)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>创建pages文件夹，添加页面</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pages</span><br><span class="line">|-- entry</span><br><span class="line">    |-- app.js</span><br><span class="line">    |-- app.vue</span><br></pre></td></tr></table></figure>

<p>pages/entry/app.js:</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">'vue'</span></span><br><span class="line"><span class="keyword">import</span> &#123; isDevelopment, isProduction &#125; <span class="keyword">from</span> <span class="string">'@/utils/env'</span></span><br><span class="line"><span class="keyword">import</span> api <span class="keyword">from</span> <span class="string">'@/utils/api'</span></span><br><span class="line"><span class="keyword">import</span> App <span class="keyword">from</span> <span class="string">'./app.vue'</span></span><br><span class="line"></span><br><span class="line">Vue.config.productionTip = <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> render = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">    render: <span class="function"><span class="params">h</span> =&gt;</span> h(App),</span><br><span class="line">  &#125;).$mount(<span class="string">'#app'</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">`isDevelopment: <span class="subst">$&#123;isDevelopment&#125;</span>`</span>)</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">`isProduction: <span class="subst">$&#123;isProduction&#125;</span>`</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (isProduction) &#123;</span><br><span class="line">  <span class="built_in">window</span>.apiready = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">    Vue.prototype.$api = <span class="built_in">window</span>.api</span><br><span class="line">    render()</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (isDevelopment) &#123;</span><br><span class="line">  Vue.prototype.$api = api</span><br><span class="line">  render()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>pages/entry/app.vue</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div id&#x3D;&quot;app&quot;&gt;</span><br><span class="line">    &lt;img alt&#x3D;&quot;Vue logo&quot; src&#x3D;&quot;..&#x2F;..&#x2F;assets&#x2F;logo.png&quot;&gt;</span><br><span class="line">    &lt;HelloWorld msg&#x3D;&quot;Welcome to Your Vue.js App&quot;&#x2F;&gt;</span><br><span class="line">  &lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import HelloWorld from &#39;..&#x2F;..&#x2F;components&#x2F;HelloWorld.vue&#39;</span><br><span class="line"></span><br><span class="line">export default &#123;</span><br><span class="line">  name: &#39;App&#39;,</span><br><span class="line">  components: &#123;</span><br><span class="line">    HelloWorld</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line">#app &#123;</span><br><span class="line">  font-family: Avenir, Helvetica, Arial, sans-serif;</span><br><span class="line">  -webkit-font-smoothing: antialiased;</span><br><span class="line">  -moz-osx-font-smoothing: grayscale;</span><br><span class="line">  text-align: center;</span><br><span class="line">  color: #2c3e50;</span><br><span class="line">  margin-top: 60px;</span><br><span class="line">&#125;</span><br><span class="line">&lt;&#x2F;style&gt;</span><br></pre></td></tr></table></figure>

<h3 id="执行编译构建"><a href="#执行编译构建" class="headerlink" title="执行编译构建"></a>执行编译构建</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yarn build</span><br></pre></td></tr></table></figure>

<p>构建结果：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">|-- dist</span><br><span class="line">    |-- entry.html</span><br><span class="line">    |-- favicon.ico</span><br><span class="line">    |-- static</span><br><span class="line">        |-- js</span><br><span class="line">            |-- chunk-vendors.cf8a90fa.js</span><br><span class="line">            |-- chunk-vendors.cf8a90fa.js.map</span><br><span class="line">            |-- entry.9940a6f5.js</span><br><span class="line">            |-- entry.9940a6f5.js.map</span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>vue</tag>
        <tag>webpack</tag>
        <tag>apicloud</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2020/03/09/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>
]]></content>
  </entry>
</search>
